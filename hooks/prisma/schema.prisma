
generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  zaps Zap[]
}
model Zap{
  id String @id  @default(uuid())
  trigerId String
  userId Int @default(0)
  triger Triger ?
  actions Actions[]
  zaprun ZapRun[]
  user User @relation(fields: [userId] , references: [id])
}

model Triger{
  id String @id @default(uuid())
  zapId String @unique
  trigerId String // this we are taking as the avaliableTrigerId
  type AvaliableTriger @relation(fields: [trigerId] , references: [id])
  zap Zap @relation(fields: [zapId] , references: [id])
}
model AvaliableTriger{
  id String @id @default(uuid())
  name String
  type Triger[]
}
model Actions{
  id String @id @default(uuid())
  actionid String
  zapid String
  type AvaliableActions @relation(fields: [actionid] , references: [id])
  zap Zap @relation(fields: [zapid] , references: [id])
  sortingorder Int @default(0)
}

model AvaliableActions{
  id String @id @default(uuid())
  name String
  actions Actions[]
}

model ZapRun{
  id String @id @default(uuid())
  zapid String
  metadat Json
  zap Zap @relation(fields: [zapid] , references: [id])
  zaprunoutbox ZapRunOutBox?
}
model ZapRunOutBox{
  id String @id @default(uuid())
  zaprunid String @unique
  zaprun ZapRun @relation(fields: [zaprunid] , references: [id])
}

